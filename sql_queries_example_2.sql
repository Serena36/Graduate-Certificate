#Practical 5 SQL Practice II

#Q2.
SELECT AU_ID, B.BOOK_NUM, BOOK_TITLE, BOOK_SUBJECT
FROM BOOK B
JOIN WRITES W ON B.BOOK_NUM = W.BOOK_NUM
ORDER BY BOOK_NUM, AU_ID;

#Q4.
SELECT P.PAT_ID, B.BOOK_NUM, PAT_FNAME, PAT_LNAME, BOOK_TITLE
FROM PATRON P 
JOIN CHECKOUT C ON P.PAT_ID = C.PAT_ID 
JOIN BOOK B ON C.BOOK_NUM = B.BOOK_NUM
WHERE CHECK_IN_DATE IS NULL
ORDER BY PAT_LNAME, BOOK_TITLE;

#Q5.
SELECT A.AU_ID, AU_FNAME, AU_LNAME, B.BOOK_NUM, BOOK_TITLE
FROM AUTHOR A
JOIN WRITES W ON A.AU_ID = W.AU_ID
JOIN BOOK B ON W.BOOK_NUM = B.BOOK_NUM
WHERE BOOK_SUBJECT = 'Cloud'
ORDER BY BOOK_TITLE, AU_LNAME;

#Q6.
SELECT B.BOOK_NUM, BOOK_TITLE, AU_LNAME, AU_FNAME, P.PAT_ID, PAT_LNAME, PAT_TYPE
FROM PATRON P 
JOIN CHECKOUT C ON P.PAT_ID = C.PAT_ID 
JOIN BOOK B ON C.BOOK_NUM = B.BOOK_NUM
JOIN WRITES W ON B.BOOK_NUM = W.BOOK_NUM
JOIN AUTHOR A ON W.AU_ID = A.AU_ID
WHERE CHECK_IN_DATE IS NULL
ORDER BY BOOK_TITLE;

#Q8.
SELECT A.AU_ID, AU_LNAME, BOOK_TITLE, CHECK_OUT_DATE, PAT_LNAME
FROM PATRON P 
JOIN CHECKOUT C ON P.PAT_ID = C.PAT_ID 
JOIN BOOK B ON C.BOOK_NUM = B.BOOK_NUM
JOIN WRITES W ON B.BOOK_NUM = W.BOOK_NUM
JOIN AUTHOR A ON W.AU_ID = A.AU_ID 
WHERE AU_LNAME = 'Bruer'
AND PAT_LNAME = 'Miles'
ORDER BY CHECK_OUT_DATE;

#Q9.
SELECT P.PAT_ID, PAT_FNAME, PAT_LNAME
FROM PATRON P 
LEFT JOIN CHECKOUT C ON P.PAT_ID = C.PAT_ID 
WHERE CHECK_OUT_DATE IS NULL
ORDER BY PAT_LNAME, PAT_FNAME;

#Q11.
SELECT P.PAT_ID, PAT_LNAME, COUNT(CHECK_NUM) AS `NUM CHECKOUTS`, COUNT(DISTINCT BOOK_NUM) AS `NUM DIFFERENT BOOKS`
FROM PATRON P 
LEFT JOIN CHECKOUT C ON P.PAT_ID = C.PAT_ID 
GROUP BY P.PAT_ID, PAT_LNAME
HAVING COUNT(CHECK_NUM) >= 3
ORDER BY COUNT(DISTINCT BOOK_NUM) DESC, COUNT(CHECK_NUM) DESC, PAT_ID;

#Q13.
SELECT PAT_ID, ROUND(AVG(DATEDIFF(CHECK_IN_DATE, CHECK_OUT_DATE)), 2) AS `Average Days Kept`
FROM CHECKOUT
GROUP BY PAT_ID
HAVING COUNT(CHECK_NUM) >= 3
ORDER BY AVG(DATEDIFF(CHECK_IN_DATE, CHECK_OUT_DATE)) DESC;

#Q15.
SELECT AU_ID, AU_FNAME, AU_LNAME
FROM AUTHOR 
WHERE AU_ID NOT IN 
	(SELECT A.AU_ID
    FROM AUTHOR A 
    JOIN WRITES W ON A.AU_ID = W.AU_ID
    JOIN BOOK B ON W.BOOK_NUM = B.BOOK_NUM 
    WHERE BOOK_SUBJECT = 'Programming')
ORDER BY AU_LNAME;

#Q17.
SELECT B.BOOK_NUM, BOOK_TITLE, BOOK_SUBJECT, AU_LNAME,
(SELECT COUNT(B.BOOK_NUM) 
FROM BOOK B
JOIN WRITES W ON B.BOOK_NUM = W.BOOK_NUM 
JOIN AUTHOR A1 ON W.AU_ID = A1.AU_ID
WHERE A1.AU_ID = A.AU_ID) AS `Num Books by Author`
FROM BOOK B
JOIN WRITES W ON B.BOOK_NUM = W.BOOK_NUM 
JOIN AUTHOR A ON W.AU_ID = A.AU_ID
WHERE BOOK_SUBJECT = 'Cloud'
GROUP BY A.AU_ID, BOOK_NUM
ORDER BY BOOK_TITLE, AU_LNAME;

#Q18.
SELECT ROUND(MIN(AVG_BOOK_COST), 2) AS `Lowest Avg Cost`, ROUND(MAX(AVG_BOOK_COST), 2) AS `Highest Avg Cost`
FROM (
SELECT BOOK_SUBJECT, AVG(BOOK_COST) AS AVG_BOOK_COST
FROM BOOK B
GROUP BY BOOK_SUBJECT) X;

#Q19.
SELECT EMP_FNAME, EMP_LNAME, EMP_EMAIL
FROM LGEMPLOYEE
WHERE EMP_HIREDATE BETWEEN '2005-01-01' AND '2014-12-31' 
ORDER BY EMP_LNAME, EMP_FNAME;

#Q20.
SELECT EMP_FNAME, EMP_LNAME, EMP_PHONE, EMP_TITLE, D.DEPT_NUM
FROM LGEMPLOYEE E
JOIN LGDEPARTMENT D ON E.DEPT_NUM = D.DEPT_NUM
WHERE D.DEPT_NUM = '300'
OR EMP_TITLE = 'CLERK I'
ORDER BY EMP_LNAME, EMP_FNAME;

#Q21.
SELECT E.EMP_NUM, EMP_LNAME, EMP_FNAME, SAL_FROM, SAL_END, SAL_AMOUNT
FROM LGEMPLOYEE E
JOIN LGSALARY_HISTORY H ON E.EMP_NUM = H.EMP_NUM
WHERE E.EMP_NUM IN (83731, 83745, 84039)
ORDER BY EMP_NUM, SAL_FROM;

#Q22.
SELECT DISTINCT VEND_NAME, VEND_STREET, VEND_CITY, VEND_STATE, VEND_ZIP
FROM LGVENDOR V
JOIN LGSUPPLIES S ON V.VEND_ID = S.VEND_ID
JOIN LGPRODUCT P ON S.PROD_SKU = P.PROD_SKU
JOIN LGBRAND B ON B.BRAND_ID = P.BRAND_ID
WHERE BRAND_NAME = 'STUTTENFURST'
AND PROD_CATEGORY LIKE 'TOP COAT'
AND PROD_PRICE BETWEEN 10.00 AND 30.00
ORDER BY VEND_STATE, VEND_NAME, VEND_CITY;

#Q23.
SELECT E.EMP_NUM, EMP_LNAME, EMP_TITLE, DEPT_NAME
FROM LGEMPLOYEE E
JOIN LGDEPARTMENT D ON E.DEPT_NUM = D.DEPT_NUM
WHERE EMP_TITLE LIKE '%ASSOCIATE%'
ORDER BY EMP_NUM, DEPT_NAME, EMP_TITLE;

#Q24.
SELECT BRAND_NAME, COUNT(PROD_SKU) AS NUMPRODUCTS
FROM LGPRODUCT P
JOIN LGBRAND B ON B.BRAND_ID = P.BRAND_ID
GROUP BY BRAND_NAME
ORDER BY BRAND_NAME;

#Q25.
SELECT B.BRAND_ID, SUM(PROD_QOH) AS TOTALINVENTORY
FROM LGPRODUCT P
JOIN LGBRAND B ON B.BRAND_ID = P.BRAND_ID
GROUP BY BRAND_ID
ORDER BY BRAND_ID DESC;

#Q26.
SELECT B.BRAND_ID, BRAND_NAME, ROUND(AVG(PROD_PRICE), 2) AS AVGPRICE
FROM LGPRODUCT P
JOIN LGBRAND B ON B.BRAND_ID = P.BRAND_ID
GROUP BY BRAND_ID, BRAND_NAME
ORDER BY BRAND_ID;

#Q27.
SELECT E.EMP_NUM, EMP_FNAME, EMP_LNAME, ROUND(MAX(SAL_AMOUNT), 0) AS LARGESTSALARY
FROM LGEMPLOYEE E
JOIN LGSALARY_HISTORY H ON E.EMP_NUM = H.EMP_NUM
WHERE EMP_HIREDATE BETWEEN '2000-01-01' AND '2000-12-31' 
GROUP BY E.EMP_NUM, EMP_FNAME, EMP_LNAME
ORDER BY MAX(SAL_AMOUNT) DESC;

#Q28.
SELECT DISTINCT D.DEPT_NUM, DEPT_NAME, DEPT_PHONE, D.EMP_NUM, ME.EMP_LNAME
FROM LGDEPARTMENT D
JOIN LGEMPLOYEE E ON D.DEPT_NUM = E.DEPT_NUM
JOIN LGEMPLOYEE ME ON D.EMP_NUM = ME.EMP_NUM
ORDER BY DEPT_NAME;

SELECT D.DEPT_NUM, DEPT_NAME, DEPT_PHONE, D.EMP_NUM, EMP_LNAME
FROM LGDEPARTMENT D 
JOIN LGEMPLOYEE AS E ON D.EMP_NUM = E.EMP_NUM
ORDER BY DEPT_NAME;

#Q29.
SELECT V.VEND_ID, VEND_NAME, BRAND_NAME, COUNT(P.PROD_SKU) AS NUMPRODUCTS
FROM LGBRAND B
JOIN LGPRODUCT P ON B.BRAND_ID = P.BRAND_ID
JOIN LGSUPPLIES S ON P.PROD_SKU = S.PROD_SKU
JOIN LGVENDOR V ON S.VEND_ID = V.VEND_ID
GROUP BY V.VEND_ID, VEND_NAME, BRAND_NAME
ORDER BY VEND_NAME, BRAND_NAME;

#Q30.
SELECT ROUND(MAX(AVG_PROD_PRICE), 2) AS `LARGEST AVERAGE`
FROM (
SELECT BRAND_ID, AVG(PROD_PRICE) AS AVG_PROD_PRICE
FROM LGPRODUCT
GROUP BY BRAND_ID) X;

#Q31.
SELECT *
FROM (
SELECT B1.BRAND_ID, B1.BRAND_NAME, B1.BRAND_TYPE, AVG(PROD_PRICE) AS AVERAGE
FROM LGBRAND B1
JOIN LGPRODUCT P1 ON B1.BRAND_ID = P1.BRAND_ID
GROUP BY B1.BRAND_ID
ORDER BY AVG(PROD_PRICE) DESC) x
WHERE x.AVERAGE = (SELECT MAX(AVERAGE) AS `LARGEST AVERAGE`
FROM (SELECT BRAND_NAME, AVG(PROD_PRICE) AS `AVERAGE`
FROM LGBRAND B
JOIN LGPRODUCT P ON B.BRAND_ID = P.BRAND_ID
GROUP BY BRAND_NAME) X);

SELECT B.BRAND_ID, BRAND_NAME, BRAND_TYPE, ROUND(AVG(PROD_PRICE), 2) AS `AVGPRICE`
FROM LGBRAND B
JOIN LGPRODUCT P ON B.BRAND_ID = P.BRAND_ID 
GROUP BY BRAND_ID, BRAND_NAME, BRAND_TYPE
HAVING ROUND(AVG(PROD_PRICE), 2) = (SELECT ROUND(MAX(AVG_PROD_PRICE), 2) AS `LARGEST AVERAGE`
FROM (SELECT BRAND_ID, AVG(PROD_PRICE) AS AVG_PROD_PRICE
FROM LGPRODUCT
GROUP BY BRAND_ID) X);

WITH subquery1 AS
(SELECT B1.BRAND_ID, B1.BRAND_NAME, B1.BRAND_TYPE, AVG(PROD_PRICE) AS AVERAGE
FROM LGBRAND B1
JOIN LGPRODUCT P1 ON B1.BRAND_ID = P1.BRAND_ID
GROUP BY B1.BRAND_ID
ORDER BY AVG(PROD_PRICE) DESC),

subquery2 AS
(SELECT BRAND_NAME, AVG(PROD_PRICE) AS `AVERAGE`
FROM LGBRAND B
JOIN LGPRODUCT P ON B.BRAND_ID = P.BRAND_ID
GROUP BY BRAND_NAME)

SELECT *
FROM subquery1 x
WHERE x.AVERAGE = (SELECT MAX(AVERAGE) AS `LARGEST AVERAGE`
FROM subquery2);

#Q32.
SELECT E.EMP_NUM, EMP_LNAME, EMP_FNAME, ROUND(SAL_AMOUNT, 0)
FROM LGEMPLOYEE E
JOIN LGSALARY_HISTORY H ON E.EMP_NUM = H.EMP_NUM
WHERE DEPT_NUM = 300
AND SAL_END IS NULL
ORDER BY SAL_AMOUNT DESC;

#Q33.
SELECT E.EMP_NUM, EMP_LNAME, EMP_FNAME, ROUND(SH.SAL_AMOUNT, 0) AS 'SAL_AMOUNT'
FROM LGSALARY_HISTORY SH
JOIN LGEMPLOYEE E ON E.EMP_NUM = SH.EMP_NUM
JOIN (SELECT EMP_NUM, SAL_AMOUNT, MIN(SAL_FROM)
FROM LGSALARY_HISTORY SH
GROUP BY EMP_NUM) X 
ON X.SAL_AMOUNT = SH.SAL_AMOUNT AND X.EMP_NUM = E.EMP_NUM
ORDER BY EMP_NUM;

SELECT E.EMP_NUM, EMP_LNAME, EMP_FNAME, ROUND(SAL_AMOUNT, 0)
FROM LGEMPLOYEE E 
JOIN LGSALARY_HISTORY SH ON E.EMP_NUM = SH.EMP_NUM
WHERE SAL_FROM = (SELECT MIN(SAL_FROM) FROM LGSALARY_HISTORY WHERE EMP_NUM = E.EMP_NUM)
ORDER BY E.EMP_NUM;

WITH example_table AS (
SELECT E.EMP_NUM, MIN(SAL_FROM) AS SAL_FROM
FROM LGEMPLOYEE E
JOIN LGSALARY_HISTORY H ON E.EMP_NUM = H.EMP_NUM
GROUP BY EMP_NUM)

SELECT E.EMP_NUM, EMP_LNAME, EMP_FNAME, ROUND(SAL_AMOUNT, 0)
FROM LGEMPLOYEE E
JOIN LGSALARY_HISTORY H ON E.EMP_NUM = H.EMP_NUM
JOIN example_table S 
ON S.EMP_NUM = E.EMP_NUM AND S.SAL_FROM = H.SAL_FROM
ORDER BY EMP_NUM;

#Q34.
SELECT DISTINCT L.INV_NUM, L1.LINE_NUM, L1.PROD_SKU, L1.PROD_DESCRIPT, L2.LINE_NUM, L2.PROD_SKU, L2.PROD_DESCRIPT, P.BRAND_ID
FROM LGLINE L
JOIN LGPRODUCT P ON L.PROD_SKU = P.PROD_SKU
JOIN (SELECT L1.INV_NUM, L1.LINE_NUM, P1.PROD_SKU, P1.PROD_DESCRIPT, P1.BRAND_ID
FROM LGLINE L1
JOIN LGPRODUCT P1 ON L1.PROD_SKU = P1.PROD_SKU
WHERE PROD_CATEGORY LIKE '%sealer%') L1 ON L.INV_NUM = L1.INV_NUM AND P.BRAND_ID = L1.BRAND_ID
JOIN (SELECT INV_NUM, L2.LINE_NUM, P2.PROD_SKU, P2.PROD_DESCRIPT, P2.BRAND_ID
FROM LGLINE L2
JOIN LGPRODUCT P2 ON L2.PROD_SKU = P2.PROD_SKU
WHERE PROD_CATEGORY LIKE '%top_coat%') L2 ON L1.INV_NUM = L2.INV_NUM AND L2.BRAND_ID = L1.BRAND_ID
ORDER BY L.INV_NUM, L1.LINE_NUM, L2.LINE_NUM DESC;

SELECT L1.INV_NUM, L1.LINE_NUM AS 'LINE_NUM(S)', P1.PROD_SKU AS 'PROD_SKU(S)', P1.PROD_DESCRIPT AS 'PROD_DESCRIPT(S)', L2.LINE_NUM AS 'LINE_NUM(T)', P2.PROD_SKU AS 'PROD_SKU(T)', P2.PROD_DESCRIPT AS 'PROD_DESCRIPT(T)', P1.BRAND_ID
FROM (LGLINE AS L1 JOIN LGPRODUCT AS P1 ON L1.PROD_SKU = P1.PROD_SKU) 
JOIN (LGLINE AS L2 JOIN LGPRODUCT AS P2 ON L2.PROD_SKU = P2.PROD_SKU) ON L1.INV_NUM = L2.INV_NUM
WHERE P1.PROD_CATEGORY = 'Sealer' 
AND P2.PROD_CATEGORY = 'Top Coat' 
AND P1.BRAND_ID = P2.BRAND_ID
ORDER BY L1.INV_NUM, L1.LINE_NUM, L2.LINE_NUM DESC;

#Q35.
SELECT EMP_NUM, EMP_FNAME, EMP_LNAME, EMP_EMAIL, SUM(LINE_QTY) AS 'TOTAL'
FROM LGBRAND B
JOIN LGPRODUCT P ON B.BRAND_ID = P.BRAND_ID
JOIN LGLINE L ON L.PROD_SKU = P.PROD_SKU
JOIN LGINVOICE I ON L.INV_NUM = I.INV_NUM
JOIN LGEMPLOYEE E ON E.EMP_NUM = I.EMPLOYEE_ID
WHERE BRAND_NAME = 'BINDER PRIME'
AND INV_DATE BETWEEN '2017-11-01' AND '2017-12-05'
GROUP BY E.EMP_NUM
HAVING SUM(LINE_QTY) = (SELECT MAX(TOTAL)
FROM (SELECT EMPLOYEE_ID, SUM(LINE_QTY) AS'TOTAL', BRAND_NAME, B.BRAND_ID
FROM LGBRAND B
JOIN LGPRODUCT P ON B.BRAND_ID = P.BRAND_ID
JOIN LGLINE L ON L.PROD_SKU = P.PROD_SKU
JOIN LGINVOICE I ON L.INV_NUM = I.INV_NUM
WHERE BRAND_NAME = 'BINDER PRIME'
AND INV_DATE BETWEEN '2017-11-01' AND '2017-12-05'
GROUP BY EMPLOYEE_ID) X)
ORDER BY EMP_LNAME;

SELECT E.EMP_NUM, EMP_FNAME, EMP_LNAME, EMP_EMAIL, TOTAL
FROM LGEMPLOYEE E
JOIN
   (SELECT EMPLOYEE_ID,
                  Sum(LINE_QTY) AS TOTAL
     FROM  LGINVOICE I
        JOIN  LGLINE L ON I.INV_NUM = L.INV_NUM
        JOIN  LGPRODUCT P ON L.PROD_SKU = P.PROD_SKU
        JOIN  LGBRAND B ON B.BRAND_ID = P.BRAND_ID
   WHERE  BRAND_NAME = 'BINDER PRIME'
        AND  INV_DATE BETWEEN '2017-11-01' AND '2017-12-05'
GROUP BY  EMPLOYEE_ID) sub 
ON E.EMP_NUM = sub.EMPLOYEE_ID
WHERE TOTAL =
   (SELECT Max(TOTAL)
     FROM
   (SELECT EMPLOYEE_ID,
	     Sum(LINE_QTY) AS TOTAL
     FROM  LGINVOICE I
        JOIN  LGLINE L ON I.INV_NUM = L.INV_NUM
        JOIN  LGPRODUCT P ON l.PROD_SKU = P.PROD_SKU
        JOIN  LGBRAND B ON B.BRAND_ID = P.BRAND_ID
   WHERE  BRAND_NAME = 'BINDER PRIME'
        AND  INV_DATE BETWEEN '2017-11-01' AND '2017-12-05'
GROUP BY  EMPLOYEE_ID) AS SUB)
ORDER BY EMP_LNAME;

#Q36.
SELECT C.CUST_CODE, CUST_FNAME, CUST_LNAME 
FROM LGCUSTOMER C
JOIN LGINVOICE I ON C.CUST_CODE = I.CUST_CODE
WHERE EMPLOYEE_ID = 83649
INTERSECT
SELECT C.CUST_CODE, CUST_FNAME, CUST_LNAME 
FROM LGCUSTOMER C
JOIN LGINVOICE I ON C.CUST_CODE = I.CUST_CODE
AND EMPLOYEE_ID = 83677
ORDER BY CUST_LNAME, CUST_FNAME;

SELECT DISTINCT C.CUST_CODE, CUST_FNAME, CUST_LNAME
FROM LGCUSTOMER C
JOIN LGINVOICE I ON C.CUST_CODE = I.CUST_CODE
WHERE EMPLOYEE_ID = 83649 
AND C.CUST_CODE IN (SELECT CUST_CODE 
FROM LGINVOICE WHERE EMPLOYEE_ID = 83677)
ORDER BY CUST_LNAME, CUST_FNAME;

#Q37.
SELECT C.CUST_CODE, CUST_FNAME, CUST_LNAME, CUST_STREET, CUST_CITY, CUST_STATE, CUST_ZIP, INV_DATE, MAX(INV_TOTAL) AS `LARGEST INVOICE`
FROM LGCUSTOMER C
JOIN LGINVOICE I ON C.CUST_CODE = I.CUST_CODE
WHERE CUST_STATE = 'AL'
GROUP BY CUST_CODE
UNION
SELECT C.CUST_CODE, CUST_FNAME, CUST_LNAME, CUST_STREET, CUST_CITY, CUST_STATE, CUST_ZIP, INV_DATE, '0.00' AS `LARGEST INVOICE`
FROM LGCUSTOMER C
LEFT JOIN LGINVOICE I ON C.CUST_CODE = I.CUST_CODE
WHERE CUST_STATE = 'AL'
AND INV_DATE IS NULL
ORDER BY CUST_LNAME, CUST_FNAME;
